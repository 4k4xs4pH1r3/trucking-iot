
# High level options per simulator
simulator {
  auto-finish {
    # The filepath for writing collected events to.
    output-filepath = /tmp/trucking-simulator/data.txt

    # Number of events to generate, per driver
    event-count = 500
  }
}


# Generator-related settings
generator {

  # Delay between each driver's generated event, in milliseconds.
  # Used by components that automate event generation.
  event-delay = 500

  # A jitter to apply to each event's delay, in milliseconds.
  # Helps streams deviate from one another, rather than them all generating lock-step events.
  #
  # A value of 100 milliseconds means that an event-delay of 500 milliseconds
  # will actually be anywhere between 500 and 600 milliseconds, calculated
  # each time an event fires.
  event-delay-jitter = 100


  # The speed that a driver needs to reach in order to consider them speeding.
  speeding-threshold = 80

  # The number of times a driver can complete a route one-way before
  # giving them a different route to follow.
  max-route-completed-count = 4

  # When a simulator uses solely routes and no drivers, this setting sets the number of routes to use by default.
  routes-to-simulate = 5

  congestion {
    # Starting value for congestion levels (0-100)
    start = 50

    # Amount that the congestion can increase/decrease per tick
    # E.g.: A value of 2 means congestion could change by -2, -1, 0, +1 or +2 on each tick.
    delta = 1
  }
}


resource-depot {
  # The number of trucks available on the road at once.
  # Drivers without trucks will wait in a queue until one is freed up for them.
  trucks-available = 50

  # The name of the directory storing the routes to use.
  # This can be either the name of a built-in directory in the resources directory, or the full path to a custom one.
  #
  # Built-in options:
  # midwest
  # newyork
  route-directory = midwest
}


transmitter {
  kafka {
    # A list of host/port pairs to use for establishing the initial connection to the Kafka cluster.
    # The client will make use of all servers irrespective of which servers are specified here for bootstrapping.
    # This list only impacts the initial hosts used to discover the full set of servers.
    bootstrap-servers = "sandbox.hortonworks.com:9092,sandbox.hortonworks.com:9092"

    # Serializer class for key that implements the Serializer interface.
    key-serializer = "org.apache.kafka.common.serialization.StringSerializer"

    # Serializer class for value that implements the Serializer interface.
    value-serializer = "org.apache.kafka.common.serialization.StringSerializer"

    ### The settings below are only used for Kafka on a secured cluster

    # By default, security is disabled
    security-enabled = false

    # Specify the protocol for SSL Encryption
    security-protocol = "SASL_PLAINTEXT"

    # Path to the JAAS configuration file
    jaas-file = ""
  }
}


# Options for generating drivers and their driving patterns
driver {
  # Number of drivers to generate/simulate
  driver-count = 10

  # Definitions for driving patterns
  # "normal" is used as the default for all ordinary drivers
  driving-patterns = [
    { name = normal, min-speed = 55, max-speed = 75, risk-frequency = 100 }
    { name = speedy, min-speed = 80, max-speed = 105, risk-frequency = 100 }
    { name = risky, min-speed = 55, max-speed = 75, risk-frequency = 30 }
    { name = more-risky, min-speed = 80, max-speed = 105, risk-frequency = 20 }
    { name = very-risky, min-speed = 80, max-speed = 105, risk-frequency = 10 }
  ]

  # Special drivers to generate
  # For simplicity, driver id's must be sequential.
  special-drivers = [
    { id = 1,  name = Edgar, pattern = risky }
    { id = 2,  name = Mushtaq, pattern = very-risky }
    { id = 3,  name = James, pattern = more-risky }
    { id = 4,  name = Rafael, pattern = more-risky }
    { id = 5,  name = Robert, pattern = speedy }

    { id = 6,  name = Robert, pattern = normal }
    { id = 7,  name = Oksana, pattern = speedy }
    { id = 8,  name = Lisa, pattern = normal }
    { id = 9,  name = Kait, pattern = speedy }
    { id = 10, name = Tom, pattern = normal }

    #{ id = 1,  name = Edgar Orendain, pattern = risky }
    #{ id = 2,  name = Mushtaq Rizvi, pattern = very-risky }
    #{ id = 3,  name = James Medel, pattern = more-risky }
    #{ id = 4,  name = Rafael Coss, pattern = more-risky }
    #{ id = 5,  name = Robert Hryniewicz, pattern = speedy }

    #{ id = 6,  name = Robert Molina, pattern = normal }
    #{ id = 7,  name = Oksana Walton, pattern = speedy }
    #{ id = 8,  name = Lisa Sensmeier, pattern = normal }
    #{ id = 9,  name = Kait Disney-Leugers, pattern = speedy }
    #{ id = 10, name = Tom Hastain, pattern = normal }
  ]

  # Length of randomly generated driver names
  driver-name-length = 6
}


# Akka options
akka {
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"

  actor {
    debug {
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on

      # enable DEBUG logging of unhandled messages
      unhandled = on
    }
  }
}
